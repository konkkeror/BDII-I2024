create or replace NONEDITIONABLE PACKAGE PKG_EMPLOYEES IS
    PROCEDURE P_INSERT(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE, 
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE, 
        P_LAST_NAME EMPLOYEES.LAST_NAME%TYPE, 
        P_EMAIL EMPLOYEES.EMAIL%TYPE, 
        P_PHONE_NUMBER EMPLOYEES.PHONE_NUMBER%TYPE, 
        P_HIRE_DATE EMPLOYEES.HIRE_DATE%TYPE, 
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE, 
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE, 
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE, 
        P_DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE,
        P_CODIGO_RESULTADO OUT NUMBER,
        P_MENSAJE_RESULTADO OUT VARCHAR
    );

    PROCEDURE P_UPDATE(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE, 
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE, 
        P_LAST_NAME EMPLOYEES.LAST_NAME%TYPE, 
        P_EMAIL EMPLOYEES.EMAIL%TYPE, 
        P_PHONE_NUMBER EMPLOYEES.PHONE_NUMBER%TYPE, 
        P_HIRE_DATE EMPLOYEES.HIRE_DATE%TYPE, 
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE, 
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE, 
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE, 
        P_DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE
    );

    PROCEDURE P_DELETE(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE
    );

END PKG_EMPLOYEES;




create or replace NONEDITIONABLE PACKAGE BODY PKG_EMPLOYEES IS
    PROCEDURE P_INSERT(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE, 
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE, 
        P_LAST_NAME EMPLOYEES.LAST_NAME%TYPE, 
        P_EMAIL EMPLOYEES.EMAIL%TYPE, 
        P_PHONE_NUMBER EMPLOYEES.PHONE_NUMBER%TYPE, 
        P_HIRE_DATE EMPLOYEES.HIRE_DATE%TYPE, 
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE, 
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE, 
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE, 
        P_DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE,
        P_CODIGO_RESULTADO OUT NUMBER,
        P_MENSAJE_RESULTADO OUT VARCHAR
    ) IS
    --VARIABLES INTERNAS
        V_CANTIDAD_JOBS_VALIDOS NUMBER;
        V_DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE;
        V_DEPARTMENT_NAME DEPARTMENTS.DEPARTMENT_NAME%TYPE;
        
        V_JOB_ID JOBS.JOB_ID%TYPE;
        V_MIN_SALARY JOBS.MIN_SALARY%TYPE;
        V_MAX_SALARY JOBS.MAX_SALARY%TYPE;
        
        V_DEPARTMENT_NOT_FOUND EXCEPTION;
    BEGIN
        BEGIN            
            SELECT JOB_ID, MIN_SALARY, MAX_SALARY
            INTO V_JOB_ID, V_MIN_SALARY, V_MAX_SALARY
            FROM JOBS
            WHERE JOB_ID = P_JOB_ID;
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                P_CODIGO_RESULTADO := 1;
                P_MENSAJE_RESULTADO := 'JOB_ID NO EXISTE';
                DBMS_OUTPUT.PUT_LINE('SQLCODE: '||SQLCODE);
                DBMS_OUTPUT.PUT_LINE('SQLERRM: '||SQLERRM);
                RETURN;
        END;
        
        BEGIN
            SELECT DEPARTMENT_ID, DEPARTMENT_NAME
            INTO V_DEPARTMENT_ID, V_DEPARTMENT_NAME
            FROM DEPARTMENTS
            WHERE DEPARTMENT_ID = P_DEPARTMENT_ID;
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                RAISE V_DEPARTMENT_NOT_FOUND;
                --P_CODIGO_RESULTADO := 3;
                --P_MENSAJE_RESULTADO := 'DEPARTMENT_ID NO EXISTE';
                --DBMS_OUTPUT.PUT_LINE('SQLCODE: '||SQLCODE);
                --DBMS_OUTPUT.PUT_LINE('SQLERRM: '||SQLERRM);
                --RETURN;        
        END;
        
        IF (P_SALARY NOT BETWEEN V_MIN_SALARY AND V_MAX_SALARY) THEN
            P_CODIGO_RESULTADO := 2;
            P_MENSAJE_RESULTADO := 'EL SALARIO '|| P_SALARY || ' ESTÁ FUERA DEL RANGO PERMITIDO ('||V_MIN_SALARY||' - '||V_MAX_SALARY||')';
            RETURN;
        END IF;
        
        --- SI VAMOS A INSERTAR
        insert into EMPLOYEES (
            EMPLOYEE_ID, 
            FIRST_NAME, 
            LAST_NAME, 
            EMAIL, 
            PHONE_NUMBER, 
            HIRE_DATE, 
            JOB_ID, 
            SALARY,
            COMMISSION_PCT, 
            MANAGER_ID, 
            DEPARTMENT_ID
        )
        VALUES (
            P_EMPLOYEE_ID,
            P_FIRST_NAME,
            P_LAST_NAME,
            P_EMAIL,
            P_PHONE_NUMBER,
            P_HIRE_DATE,
            P_JOB_ID,
            P_SALARY,
            P_COMMISSION_PCT,
            P_MANAGER_ID,
            P_DEPARTMENT_ID
        );
        
        COMMIT;
        P_CODIGO_RESULTADO := 0;
        P_MENSAJE_RESULTADO := 'SE INSERTÓ';
        
    EXCEPTION 
        WHEN V_DEPARTMENT_NOT_FOUND THEN
            P_CODIGO_RESULTADO := 3;
            P_MENSAJE_RESULTADO := 'DEPARTMENT_ID NO EXISTE';
            DBMS_OUTPUT.PUT_LINE('SQLCODE: '||SQLCODE);
            DBMS_OUTPUT.PUT_LINE('SQLERRM: '||SQLERRM);
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('SQLCODE: '||SQLCODE);
            DBMS_OUTPUT.PUT_LINE('SQLERRM: '||SQLERRM);
            ROLLBACK;
    END P_INSERT;

    PROCEDURE P_UPDATE(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE, 
        P_FIRST_NAME EMPLOYEES.FIRST_NAME%TYPE, 
        P_LAST_NAME EMPLOYEES.LAST_NAME%TYPE, 
        P_EMAIL EMPLOYEES.EMAIL%TYPE, 
        P_PHONE_NUMBER EMPLOYEES.PHONE_NUMBER%TYPE, 
        P_HIRE_DATE EMPLOYEES.HIRE_DATE%TYPE, 
        P_JOB_ID EMPLOYEES.JOB_ID%TYPE, 
        P_SALARY EMPLOYEES.SALARY%TYPE,
        P_COMMISSION_PCT EMPLOYEES.COMMISSION_PCT%TYPE, 
        P_MANAGER_ID EMPLOYEES.MANAGER_ID%TYPE, 
        P_DEPARTMENT_ID EMPLOYEES.DEPARTMENT_ID%TYPE
    ) IS
    --VARIABLES INTERNAS
    BEGIN
        NULL;
    END P_UPDATE;

    PROCEDURE P_DELETE(
        P_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE
    ) IS
    BEGIN
        NULL;
    END P_DELETE;

END PKG_EMPLOYEES;